// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name OSBarcodeLib
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Combine
import Foundation
import Swift
import SwiftUI
import UIKit
import Vision
import _Concurrency
import _StringProcessing
public struct OSBARCManagerFactory {
  public static func createManager(with rootViewController: UIKit.UIViewController) -> OSBarcodeLib.OSBARCManagerProtocol
}
public enum OSBARCManagerError : Swift.Error {
  case cameraAccessDenied
  case scanningCancelled
  public static func == (a: OSBarcodeLib.OSBARCManagerError, b: OSBarcodeLib.OSBARCManagerError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public protocol OSBARCManagerProtocol {
  #if compiler(>=5.3) && $AsyncAwait
  func scanBarcode(with instructionsText: Swift.String, and buttonText: Swift.String?) async throws -> Swift.String
  #endif
}
extension OSBarcodeLib.OSBARCManagerError : Swift.Equatable {}
extension OSBarcodeLib.OSBARCManagerError : Swift.Hashable {}
